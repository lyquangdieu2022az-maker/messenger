from flask import Flask, request
import requests

app = Flask(__name__)

# ====== C·∫§U H√åNH BOT ======
VERIFY_TOKEN = "0916659939"   # Token ƒë·ªÉ x√°c minh Webhook (b·∫°n c√≥ th·ªÉ ƒë·ªïi)
PAGE_ACCESS_TOKEN = "EAATHSZCmQwQ8BPhPGgRwoQgMhzoZAAcnbQkXZBZCtZBMtPQFCri06o50bM9XCm0A3VNpx0UzI5v0jbW1QwxddQZC7iZA8w2w3jk1lHDU0qhOQo6ZA1AgWXe7XRw5EZBNnSkhSI0U1W4H0h8LzbjZC9Jl1ak9yrXCZA1m5c7yb7i02uqAQKvLwH2Oe4tQcZB0t57Xnxg01b5MCwkxugZDZD"
OPENROUTER_API_KEY = "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"  # üëâ Key t·ª´ https://openrouter.ai/keys
# ===========================


# üß© X√°c minh Webhook khi b·∫•m ‚ÄúX√°c minh v√† l∆∞u‚Äù trong Meta
@app.route("/webhook", methods=['GET'])
def verify():
    token = request.args.get("hub.verify_token")
    challenge = request.args.get("hub.challenge")
    if token == VERIFY_TOKEN:
        return challenge
    return "X√°c minh th·∫•t b·∫°i", 403


# üí¨ Nh·∫≠n tin nh·∫Øn t·ª´ ng∆∞·ªùi d√πng
@app.route("/webhook", methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", data)

    if data.get("object") == "page":
        for entry in data.get("entry", []):
            for event in entry.get("messaging", []):
                if "message" in event:
                    sender_id = event["sender"]["id"]
                    message_text = event["message"].get("text", "")
                    reply_text = get_ai_reply(message_text)
                    send_message(sender_id, reply_text)
    return "ok", 200


# üß† G·ªçi API OpenRouter ƒë·ªÉ sinh ph·∫£n h·ªìi AI
def get_ai_reply(user_message):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "HTTP-Referer": "https://openrouter.ai",
        "X-Title": "Messenger AI Bot",
        "Content-Type": "application/json",
    }
    data = {
        "model": "gpt-4o-mini",  # b·∫°n c√≥ th·ªÉ ƒë·ªïi model kh√°c n·∫øu mu·ªën
        "messages": [
            {"role": "system", "content": "B·∫°n l√† tr·ª£ l√Ω AI th√¢n thi·ªán, n√≥i ti·∫øng Vi·ªát, tr·∫£ l·ªùi ng·∫Øn g·ªçn, d·ªÖ hi·ªÉu."},
            {"role": "user", "content": user_message}
        ]
    }

    try:
        res = requests.post(url, headers=headers, json=data)
        if res.status_code == 200:
            return res.json()["choices"][0]["message"]["content"]
        else:
            print("‚ö†Ô∏è L·ªói OpenRouter:", res.text)
            return "Xin l·ªói, t√¥i ƒëang b·ªã l·ªói x·ª≠ l√Ω ü•≤"
    except Exception as e:
        print("‚ùå L·ªói khi g·ªçi OpenRouter:", e)
        return "T√¥i ƒëang g·∫∑p s·ª± c·ªë nh·ªè, b·∫°n th·ª≠ l·∫°i sau nh√© ü•∫"


# ‚úâÔ∏è G·ª≠i ph·∫£n h·ªìi l·∫°i Messenger
def send_message(recipient_id, message_text):
    url = f"https://graph.facebook.com/v18.0/me/messages?access_token={PAGE_ACCESS_TOKEN}"
    payload = {
        "recipient": {"id": recipient_id},
        "message": {"text": message_text}
    }
    res = requests.post(url, json=payload)
    print("üì§ ƒê√£ g·ª≠i ph·∫£n h·ªìi:", res.text)


if __name__ == "__main__":
    app.run(port=5000)
